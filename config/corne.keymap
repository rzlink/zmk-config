/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define LOWER 1
#define RAISE 2
#define FUNC  3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | TAB  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp TAB
              &kp LGUI &mo LOWER &kp SPACE   &kp RET &mo RAISE &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP  |
// | CTRL | BT1 | BT2 | BT3 |     |     |   | LFT | DWN |  UP | RGT |     |       |
// | SHFT |     |     |     |     |  (  |   |  )  |     |  <  |  >  |  ?  | BTCLR |
//                    | APP |     |  {  |   |  }  | FUN | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4   &kp N5           &kp N6     &kp N7     &kp N8   &kp N9    &kp N0    &kp BSPC
   &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans   &trans           &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT &trans    &trans
   &kp LSHFT  &trans       &trans       &trans       &trans   &kp LPAR         &kp RPAR   &trans     &kp LT   &kp GT    &kp QMARK &bt BT_CLR
                          	        &kp K_APP    &trans   &kp LBRC         &kp RBRC   &mo FUNC   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  |  |  |  ~   |
//                    | GUI | FUN | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &mo FUNC &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |     |   |     |     |     |     |     |       |
// |    | BT1 | BT2 | BT3 |     |     |   |     |     |     |     |     |       |
// |    |     |     |     |     |     |   |     |     |     |     |     |       |
//                        |     |     |   |     |     |     |     |
                        bindings = <
   &trans   &trans       &trans       &trans       &trans   &trans           &trans     &trans     &trans   &trans    &trans    &trans
   &trans   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans   &trans           &trans     &trans     &trans   &trans    &trans    &trans
   &trans   &trans       &trans       &trans       &trans   &trans           &trans     &trans     &trans   &trans    &trans    &trans
                         	      &trans       &trans   &trans           &trans     &trans     &trans
                        >;
                };
        };
};
